
                #region [ Main Code ]

                //string ConnStr = ConfigurationManager.AppSettings["ConnStr"];
                if (1 == 2)
                {
                    WriteLine(AppValues.SaveFolder);
                    string format = AppValues.DateFormat;//ConfigurationManager.AppSettings["DateFormat"];
                    WriteLine(format);
                    string s = DateTime.Now.ToString(format);
                    WriteLine(s);
                    WriteLine();
                    WriteLine(AppValues.ConnStr);
                    //ISvcConnection pConn = dict["oracle"];
                    //ConnectionOracle pConn = new ConnectionOracle();
                    pConn.ConnectionString = AppValues.ConnStr;
                    DataManager.Instance.Connection = pConn;
                    DataManager.Instance.Connection.Test();
                    WriteLine("Connection test success.");
                    //ConfigurationManager.AppSettings["SaveFolder"]);

                    string types = AppValues.Types;
                    WriteLine($"{types} Type list will be scripted.");
                    string[] typeList = types.Split(new char[] { ',' }, StringSplitOptions.RemoveEmptyEntries);
                    typeList = typeList ?? new string[] { };
                    saveFolder = GetSaveFolderPath(AppValues.SaveFolder);
                    /*
                    saveFolder = AppValues.SaveFolder;
                    if (saveFolder.StartsWith(".") || saveFolder.StartsWith("\\") || saveFolder.StartsWith("/"))
                    {
                        saveFolder = saveFolder.TrimStart('.').TrimStart('\\').TrimStart('/');
                        saveFolder = AssemblyDirectoryV2 + saveFolder;
                    }

                    if (!saveFolder.EndsWith("\\") && !saveFolder.EndsWith("/"))
                        saveFolder += "/";

                    saveFolder += AppValues.SaveFolderName + $"_{DataManager.Instance.Connection.Owner.ToUpperInvariant()}" + DateTime.Now.ToString(AppValues.DateFormat) + "/";
                    */
                    foreach (var item in typeList)
                    {
                        var typName = item.ToUpperInvariant();
                        try
                        {
                            objCount = 0;
                            objCounter = 0;
                            typeCounter++;
                            WriteLine($"----------------{typName} TYPE START ({typeCounter}/{typeCount})----------------------------");
                            //WriteLine($"{item} Type Script is getting.");
                            WriteLine($"Object List with {typName} type will be scripted.");
                            objLst = null;

                            #region [ Getting Object List ]

                            objLst = DataManager.Instance.GetObjects(typName);

                            if (objLst.Count == 0)
                            {
                                objLst = DataManager.Instance.GetObjects(typName, new OracleObjectListV3());
                            }

                            #endregion

                            objCount = objLst.Count;

                            if (objCount > 0)
                            {
                                objCounter = 0;
                                foreach (var obj in objLst)
                                {
                                    objCounter++;
                                    WriteLine($"------------{obj.TYPENAME} {obj.OWNER}.{obj.NAME} -- START ({objCounter}/{objCount})--------------");
                                    WriteLine($"{obj.TYPENAME} {obj.OWNER}.{obj.NAME} object is being writed.");
                                    //WriteLine(obj.ToString());

                                    #region [ Getting Metadata Script ]

                                    scriptLst = null;
                                    // Getting Metadata Script Text List Of Object.
                                    try
                                    {
                                        scriptLst = new List<string>();
                                        scriptLst = DataManager.Instance.GetScriptOfObject(obj, new OracleScriptListV2());
                                    }
                                    catch (Exception ex2)
                                    {
                                        LogException(ex2);
                                    }
                                    //if metadata script of object has not been found, this will work.
                                    if (scriptLst.Count == 0)
                                    {
                                        // Getting Metadata Script Text List Of Object with another version.
                                        try
                                        {
                                            scriptLst = new List<string>();
                                            scriptLst = DataManager.Instance.GetScriptOfObject(obj, new OracleScriptList());
                                        }
                                        catch (Exception ex3)
                                        {
                                            LogException(ex3);
                                        }
                                    }

                                    #endregion

                                    WriteLine("Script has been taken.");
                                    WriteLine("Script is being written to file.");

                                    //Write Script Content to Console.
                                    if (AppValues.WriteScriptToConsole)
                                    {
                                        scriptLst.ForEach(st => WriteWithCheck(st));
                                    }

                                    //File Logging
                                    try
                                    {
                                        if (!Directory.Exists(saveFolder + obj.TYPENAME + "/"))
                                        { Directory.CreateDirectory(saveFolder + obj.TYPENAME + "/"); }

                                        //fullFileName = $"{saveFolder}{obj.TYPENAME}/{obj.TYPENAME}_{obj.OWNER}.{obj.NAME}_METADATA.sql";
                                        fullFileName = $"{saveFolder}{obj.TYPENAME}/{obj.OWNER}.{obj.NAME}_METADATA.sql";
                                        int cc = 2;
                                        while (File.Exists(fullFileName))
                                        {
                                            fullFileName = $"{saveFolder}{obj.TYPENAME}/{obj.OWNER}.{obj.NAME}_METADATA_{cc}.sql";
                                            //fullFileName = $"{saveFolder}{obj.TYPENAME}/{obj.TYPENAME}_{obj.OWNER}.{obj.NAME}_METADATA_{cc}.sql";
                                            cc++;
                                        }

                                        FileOperator.Instance.Write(fullFileName, scriptLst);
                                        WriteLine("Script has been written to file.");
                                    }
                                    catch (Exception ex4)
                                    {
                                        LogException(ex4);
                                    }

                                    WriteLine($"------------{obj.TYPENAME} {obj.OWNER}.{obj.NAME} -- END   ({objCounter}/{objCount})--------------");
                                }
                            }
                            else
                            {
                                WriteLine($"No objects found with {typName} Type.");
                            }
                        }
                        catch (Exception ex)
                        {
                            LogException(ex);
                        }

                        WriteLine($"----------------{typName} TYPE END   ({typeCounter}/{typeCount})----------------------------");
                    }

                    WriteLine("Script Operation has been finished.");
                }

                #endregion